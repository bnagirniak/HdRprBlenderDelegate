#usda 1.0
(
    "WARNING: THIS FILE IS GENERATED BY usdGenSchema.  DO NOT EDIT."
)

class "RprRendererSettingsAPI" (
    doc = "Defines render settings for AMD Radeon Pro Renderer"
)
{
    uniform int rpr:adaptiveSampling:minSamples = 64 (
        displayGroup = "Sampling"
        displayName = "Min Samples"
        doc = "Minimum number of samples to render for each pixel. After this, adaptive sampling will stop sampling pixels where noise is less than 'Variance Threshold'."
        rprMinValue = 1
    )
    uniform float rpr:adaptiveSampling:noiseTreshold = 0 (
        displayGroup = "Sampling"
        displayName = "Noise Threshold"
        doc = "Cutoff for adaptive sampling. Once pixels are below this amount of noise, no more samples are added. Set to 0 for no cutoff."
        rprMaxValue = 1
        rprMinValue = 0
    )
    uniform bool rpr:alpha:enable = 0 (
        displayGroup = "General"
        displayName = "Enable Color Alpha"
        doc = ""
    )
    uniform float rpr:ambientOcclusion:radius = 1 (
        displayGroup = "General|Render Mode"
        displayName = "Ambient Occlusion Radius"
        rprMaxValue = 100
        rprMinValue = 0
    )
    uniform bool rpr:beautyMotionBlur:enable = 1 (
        displayGroup = "General"
        displayName = "Enable Beauty Motion Blur"
        doc = "If disabled, only velocity AOV will store information about movement on the scene. Required for motion blur that is generated in post-processing."
    )
    uniform float rpr:contour:antialiasing = 1 (
        displayGroup = "General|Render Mode|Contour"
        displayName = "Antialiasing"
        rprMaxValue = 1
        rprMinValue = 0
    )
    uniform bool rpr:contour:debug = 0 (
        displayGroup = "General|Render Mode|Contour"
        displayName = "Debug"
        doc = """ Whether to show colored outlines according to used features or not.\r
                  Colors legend:\r
                   * red - primitive Id\r
                   * green - material Id\r
                   * blue - normal\r
                   * yellow - primitive Id + material Id\r
                   * magenta - primitive Id + normal\r
                   * cyan - material Id + normal\r
                   * black - all\r
              """
    )
    uniform float rpr:contour:linewidthMaterialId = 1 (
        displayGroup = "General|Render Mode|Contour"
        displayName = "Linewidth Material Id"
        doc = "Linewidth of edges detected via Material Id."
        rprMaxValue = 100
        rprMinValue = 0
    )
    uniform float rpr:contour:linewidthNormal = 1 (
        displayGroup = "General|Render Mode|Contour"
        displayName = "Linewidth Normal"
        doc = "Linewidth of edges detected via normals."
        rprMaxValue = 100
        rprMinValue = 0
    )
    uniform float rpr:contour:linewidthPrimId = 1 (
        displayGroup = "General|Render Mode|Contour"
        displayName = "Linewidth Primitive Id"
        doc = "Linewidth of edges detected via Primitive Id."
        rprMaxValue = 100
        rprMinValue = 0
    )
    uniform float rpr:contour:linewidthUv = 1 (
        displayGroup = "General|Render Mode|Contour"
        displayName = "Linewidth UV"
        doc = "Linewidth of edges detected via UV."
        rprMaxValue = 100
        rprMinValue = 0
    )
    uniform float rpr:contour:normalThreshold = 45 (
        displayGroup = "General|Render Mode|Contour"
        displayName = "Normal Threshold"
        rprMaxValue = 180
        rprMinValue = 0
    )
    uniform bool rpr:contour:useMaterialId = 1 (
        displayGroup = "General|Render Mode|Contour"
        displayName = "Use Material Id"
        doc = "Whether to use material Id for edge detection or not."
    )
    uniform bool rpr:contour:useNormal = 1 (
        displayGroup = "General|Render Mode|Contour"
        displayName = "Use Normal"
        doc = "Whether to use geometry normals for edge detection or not"
    )
    uniform bool rpr:contour:usePrimId = 1 (
        displayGroup = "General|Render Mode|Contour"
        displayName = "Use Primitive Id"
        doc = "Whether to use primitive Id for edge detection or not."
    )
    uniform bool rpr:contour:useUv = 1 (
        displayGroup = "General|Render Mode|Contour"
        displayName = "Use UV"
        doc = "Whether to use UV for edge detection or not"
    )
    uniform float rpr:contour:uvThreshold = 1 (
        displayGroup = "General|Render Mode|Contour"
        displayName = "Normal Threshold"
        doc = "Threshold of edges detected via UV."
        rprMaxValue = 100
        rprMinValue = 0
    )
    uniform token rpr:core:cameraMode = "default" (
        allowedTokens = ["default", "Latitude Longitude 360", "Latitude Longitude Stereo", "Cubemap", "Cubemap Stereo", "Fisheye"]
        displayGroup = "General"
        displayName = "Camera Mode"
    )
    uniform bool rpr:core:flipVertical = 0 (
        displayGroup = "General"
        displayName = "Flip Vertical"
    )
    uniform token rpr:core:renderMode = "Global Illumination" (
        allowedTokens = ["Global Illumination", "Direct Illumination", "Wireframe", "Material Index", "Position", "Normal", "Texcoord", "Ambient Occlusion", "Diffuse", "Contour"]
        displayGroup = "General|Render Mode"
        displayName = "Render Mode"
    )
    uniform token rpr:core:renderQuality = "Northstar" (
        allowedTokens = ["Low", "Medium", "High", "HybridPro", "Full", "Northstar"]
        displayGroup = "General"
        displayName = "Render Quality"
    )
    uniform token rpr:cryptomatte:outputMode = "Batch" (
        allowedTokens = ["Batch", "Interactive"]
        displayGroup = "General|Cryptomatte"
        displayName = "Output Mode"
        doc = "Batch - save cryptomatte only in the batch rendering mode (USD Render ROP, husk). Interactive - same as the Batch but also save cryptomatte in the non-batch rendering mode. Cryptomatte always saved after 'Max Samples' is reached."
    )
    uniform asset rpr:cryptomatte:outputPath = @@ (
        displayGroup = "General|Cryptomatte"
        displayName = "Output Path"
        doc = "Controls where cryptomatte should be saved. Use 'Cryptomatte Output Mode' to control when cryptomatte is saved."
    )
    uniform bool rpr:cryptomatte:previewLayer = 0 (
        displayGroup = "General|Cryptomatte"
        displayName = "Add Preview Layer"
        doc = "Whether to generate cryptomatte preview layer or not. Whether you need it depends on the software you are planning to use cryptomatte in. For example, Houdini's COP Cryptomatte requires it, Nuke, on contrary, does not."
    )
    uniform bool rpr:denoising:enable = 0 (
        displayGroup = "Postprocessing|Denoise"
        displayName = "Enable AI Denoise"
    )
    uniform int rpr:denoising:iterStep = 32 (
        displayGroup = "Postprocessing|Denoise"
        displayName = "Iteration Step"
        rprMinValue = 1
    )
    uniform int rpr:denoising:minIter = 4 (
        displayGroup = "Postprocessing|Denoise"
        displayName = "Min Iteration"
        rprMinValue = 1
    )
    uniform bool rpr:export:asSingleFile = 0 (
        displayGroup = "Export .rpr"
        displayName = "As Single File"
        rprHidden = 1
    )
    uniform asset rpr:export:path = @@ (
        displayGroup = "Export .rpr"
        displayName = "Path"
        rprHidden = 1
    )
    uniform bool rpr:export:useImageCache = 0 (
        displayGroup = "Export .rpr"
        displayName = "Use Image Cache"
        rprHidden = 1
    )
    uniform bool rpr:gamma:enable = 0 (
        displayGroup = "Postprocessing|Gamma"
        displayName = "Enable Gamma"
        doc = "Enable gamma correction."
    )
    uniform float rpr:gamma:value = 1 (
        displayGroup = "Postprocessing|Gamma"
        displayName = "Gamma"
        doc = "Gamma correction value."
        rprMaxValue = 5
        rprMinValue = 0
    )
    uniform int rpr:maxSamples = 256 (
        displayGroup = "Sampling"
        displayName = "Max Samples"
        doc = "Maximum number of samples to render for each pixel."
        rprMinValue = 1
    )
    uniform asset rpr:ocio:configPath = @@ (
        displayGroup = "General|OpenColorIO"
        displayName = "Config Path"
        doc = "The file path of the OpenColorIO config file to be used. Overrides any value specified in OCIO environment variable."
    )
    uniform string rpr:ocio:renderingColorSpace = "" (
        displayGroup = "General|OpenColorIO"
        displayName = "Rendering Color Space"
    )
    uniform float rpr:quality:imageFilterRadius = 1.5 (
        displayGroup = "Quality"
        displayName = "Pixel filter width"
        doc = "Determines Pixel filter width (anti-aliasing)."
        rprMaxValue = 5
        rprMinValue = 0
    )
    uniform bool rpr:quality:interactive:enableDownscale = 1 (
        displayGroup = "Quality|Interactive"
        displayName = "Enable Downscale"
        doc = "Controls whether in interactive mode resolution should be downscaled or no."
    )
    uniform int rpr:quality:interactive:rayDepth = 2 (
        displayGroup = "Quality|Interactive"
        displayName = "Max Ray Depth"
        doc = "Controls value of 'Max Ray Depth' in interactive mode."
        rprMaxValue = 50
        rprMinValue = 1
    )
    uniform int rpr:quality:interactive:resolutionDownscale = 3 (
        displayGroup = "Quality|Interactive"
        displayName = "Resolution Downscale"
        doc = "Controls how much rendering resolution is downscaled in interactive mode. Formula: resolution / (2 ^ downscale). E.g. downscale==2 will give you 4 times smaller rendering resolution."
        rprMaxValue = 10
        rprMinValue = 0
    )
    uniform float rpr:quality:radianceClamping = 0 (
        displayGroup = "Quality"
        displayName = "Max Radiance"
        doc = "Limits the intensity, or the maximum brightness, of samples in the scene. Greater clamp radiance values produce more brightness. Set to 0.0 ot disable clamping."
        rprMaxValue = 1000000
        rprMinValue = 0
    )
    uniform float rpr:quality:raycastEpsilon = 0.002 (
        displayGroup = "Quality"
        displayName = "Ray Cast Epsilon"
        doc = "Determines an offset used to move light rays away from the geometry for ray-surface intersection calculations."
        rprMaxValue = 1
        rprMinValue = 0.000001
    )
    uniform int rpr:quality:rayDepth = 3 (
        displayGroup = "Quality"
        displayName = "Max Ray Depth"
        doc = "The number of times that a ray bounces off various surfaces before being terminated."
        rprMaxValue = 50
        rprMinValue = 1
    )
    uniform int rpr:quality:rayDepthDiffuse = 3 (
        displayGroup = "Quality"
        displayName = "Diffuse Ray Depth"
        doc = "The maximum number of times that a light ray can be bounced off diffuse surfaces."
        rprMaxValue = 50
        rprMinValue = 0
    )
    uniform int rpr:quality:rayDepthGlossy = 3 (
        displayGroup = "Quality"
        displayName = "Glossy Ray Depth"
        doc = "The maximum number of ray bounces from specular surfaces."
        rprMaxValue = 50
        rprMinValue = 0
    )
    uniform int rpr:quality:rayDepthGlossyRefraction = 3 (
        displayGroup = "Quality"
        displayName = "Glossy Refraction Ray Depth"
        doc = "The Glossy Refraction Ray Depth parameter is similar to the Refraction Ray Depth. The difference is that it is aimed to work with matte refractive materials, such as semi-frosted glass."
        rprMaxValue = 50
        rprMinValue = 0
    )
    uniform int rpr:quality:rayDepthRefraction = 3 (
        displayGroup = "Quality"
        displayName = "Refraction Ray Depth"
        doc = "The maximum number of times that a light ray can be refracted, and is designated for clear transparent materials, such as glass."
        rprMaxValue = 50
        rprMinValue = 0
    )
    uniform int rpr:quality:rayDepthShadow = 3 (
        displayGroup = "Quality"
        displayName = "Shadow Ray Depth"
        doc = "Controls the accuracy of shadows cast by transparent objects. It defines the maximum number of surfaces that a light ray can encounter on its way causing these surfaces to cast shadows."
        rprMaxValue = 50
        rprMinValue = 0
    )
    uniform bool rpr:tonemapping:enable = 0 (
        displayGroup = "Postprocessing|Tonemapping"
        displayName = "Enable Tonemapping"
        doc = "Enable linear photographic tone mapping filter. More info in RIF documentation."
    )
    uniform float rpr:tonemapping:exposureTime = 0.125 (
        displayGroup = "Postprocessing|Tonemapping"
        displayName = "Film Exposure Time (sec)"
        rprMaxValue = 10
        rprMinValue = 0
    )
    uniform float rpr:tonemapping:fstop = 1 (
        displayGroup = "Postprocessing|Tonemapping"
        displayName = "Fstop"
        doc = "Aperture f-number."
        rprMaxValue = 100
        rprMinValue = 0
    )
    uniform float rpr:tonemapping:gamma = 1 (
        displayGroup = "Postprocessing|Tonemapping"
        displayName = "Gamma"
        doc = "Gamma correction value."
        rprMaxValue = 5
        rprMinValue = 0
    )
    uniform float rpr:tonemapping:sensitivity = 1 (
        displayGroup = "Postprocessing|Tonemapping"
        displayName = "Film Exposure Time (sec)"
        doc = "Luminance of the scene (in candela per m^2)."
        rprMaxValue = 10
        rprMinValue = 0
    )
    uniform bool rpr:uniformSeed = 1 (
        displayGroup = "General"
        displayName = "Use Uniform Seed"
    )
    uniform double stageMetersPerUnit = 1 (
        displayGroup = "General"
        displayName = "Meters Per Unit"
        doc = "Scene unit size in meters"
    )
}

class "RprObjectSettingsAPI"
{
    string primvars:rpr:object:assetName = "" (
        displayGroup = "Object"
        displayName = "Asset Name"
        doc = "Asset name for cryptomatte asset pass"
    )
    uniform int primvars:rpr:object:deform:samples = 3 (
        displayGroup = "Object"
        displayName = "Motion Blur Deform Samples"
        doc = ""
    )
    int primvars:rpr:object:id = 0 (
        displayGroup = "Object"
        displayName = "ID"
        doc = "Index number of the 'Object Index' render pass"
    )
    uniform int primvars:rpr:object:transform:samples = 1 (
        displayGroup = "Object"
        displayName = "Motion Blur Transform Samples"
        doc = ""
    )
    bool primvars:rpr:object:visibility:camera = 1 (
        displayGroup = "Visibility"
        displayName = "Visibility Camera"
        doc = """ Used to show or hide an object from the camera.\r
                  Disabling camera visibility is the most optimized way to hide an object from the camera but still have it cast shadows, be visible in reflections, etc.\r
              """
    )
    bool primvars:rpr:object:visibility:diffuse = 1 (
        displayGroup = "Visibility"
        displayName = "Visibility Diffuse"
        doc = "Diffuse visibility affects indirect diffuse rays and makes an object visible or invisible in reflections on diffuse surfaces."
    )
    bool primvars:rpr:object:visibility:glossyReflection = 1 (
        displayGroup = "Visibility"
        displayName = "Visibility Glossy Reflection"
        doc = ""
    )
    bool primvars:rpr:object:visibility:glossyRefraction = 1 (
        displayGroup = "Visibility"
        displayName = "Visibility Glossy Refraction"
        doc = ""
    )
    bool primvars:rpr:object:visibility:reflection = 1 (
        displayGroup = "Visibility"
        displayName = "Visibility Reflection"
        doc = "Reflection visibility makes an object visible or invisible in reflections on specular surfaces. Note that hiding an object from specular reflections keeps its shadows (including reflected shadows) visible."
    )
    bool primvars:rpr:object:visibility:refraction = 1 (
        displayGroup = "Visibility"
        displayName = "Visibility Refraction"
        doc = "Refraction visibility makes an object visible or invisible when seen through transparent objects. Note that hiding an object from refractive rays keeps its shadows (including refracted shadows) visible."
    )
    bool primvars:rpr:object:visibility:shadow = 1 (
        displayGroup = "Visibility"
        displayName = "Visibility Shadow"
        doc = "Shadow visibility controls whether to show or to hide shadows cast by the object onto other surfaces (including reflected shadows and shadows seen through transparent objects). You might need this option to hide shadows that darken other objects in the scene or create unwanted effects."
    )
    bool primvars:rpr:object:visibility:transparent = 1 (
        displayGroup = "Visibility"
        displayName = "Visibility Transparent"
        doc = ""
    )
}

class "RprMeshSettingsAPI"
{
    uniform int primvars:rpr:mesh:ignoreContour = 0 (
        displayGroup = "Contour"
        displayName = "Ignore Contour"
        doc = "Whether to extract contour for a mesh or not. Works with RPR2 only."
    )
    uniform int primvars:rpr:mesh:subdivisionLevel = 0 (
        displayGroup = "Subdivision"
        displayName = "Subdivision Level"
        doc = ""
    )
    string primvars:rpr:object:assetName = "" (
        displayGroup = "Object"
        displayName = "Asset Name"
        doc = "Asset name for cryptomatte asset pass"
    )
    uniform int primvars:rpr:object:deform:samples = 3 (
        displayGroup = "Object"
        displayName = "Motion Blur Deform Samples"
        doc = ""
    )
    int primvars:rpr:object:id = 0 (
        displayGroup = "Object"
        displayName = "ID"
        doc = "Index number of the 'Object Index' render pass"
    )
    uniform int primvars:rpr:object:transform:samples = 1 (
        displayGroup = "Object"
        displayName = "Motion Blur Transform Samples"
        doc = ""
    )
    bool primvars:rpr:object:visibility:camera = 1 (
        displayGroup = "Visibility"
        displayName = "Visibility Camera"
        doc = """ Used to show or hide an object from the camera.\r
                  Disabling camera visibility is the most optimized way to hide an object from the camera but still have it cast shadows, be visible in reflections, etc.\r
              """
    )
    bool primvars:rpr:object:visibility:diffuse = 1 (
        displayGroup = "Visibility"
        displayName = "Visibility Diffuse"
        doc = "Diffuse visibility affects indirect diffuse rays and makes an object visible or invisible in reflections on diffuse surfaces."
    )
    bool primvars:rpr:object:visibility:glossyReflection = 1 (
        displayGroup = "Visibility"
        displayName = "Visibility Glossy Reflection"
        doc = ""
    )
    bool primvars:rpr:object:visibility:glossyRefraction = 1 (
        displayGroup = "Visibility"
        displayName = "Visibility Glossy Refraction"
        doc = ""
    )
    bool primvars:rpr:object:visibility:light = 1 (
        displayGroup = "Visibility"
        displayName = "Visibility Light"
        doc = ""
    )
    bool primvars:rpr:object:visibility:reflection = 1 (
        displayGroup = "Visibility"
        displayName = "Visibility Reflection"
        doc = "Reflection visibility makes an object visible or invisible in reflections on specular surfaces. Note that hiding an object from specular reflections keeps its shadows (including reflected shadows) visible."
    )
    bool primvars:rpr:object:visibility:refraction = 1 (
        displayGroup = "Visibility"
        displayName = "Visibility Refraction"
        doc = "Refraction visibility makes an object visible or invisible when seen through transparent objects. Note that hiding an object from refractive rays keeps its shadows (including refracted shadows) visible."
    )
    bool primvars:rpr:object:visibility:shadow = 1 (
        displayGroup = "Visibility"
        displayName = "Visibility Shadow"
        doc = "Shadow visibility controls whether to show or to hide shadows cast by the object onto other surfaces (including reflected shadows and shadows seen through transparent objects). You might need this option to hide shadows that darken other objects in the scene or create unwanted effects."
    )
    bool primvars:rpr:object:visibility:transparent = 1 (
        displayGroup = "Visibility"
        displayName = "Visibility Transparent"
        doc = ""
    )
}

class "RprMaterialSettingsAPI"
{
    uniform string rpr:material:assetName = "" (
        displayGroup = "Material"
        displayName = "Asset Name"
        doc = "Asset name for cryptomatte asset pass"
    )
    uniform int rpr:material:id = 0 (
        displayGroup = "Material"
        displayName = "ID"
        doc = ""
    )
}

class "RprLightSettingsAPI"
{
    uniform bool rpr:object:visibility:camera = 0 (
        displayGroup = "Visibility"
        displayName = "Visibility Camera"
        doc = """ Used to show or hide an object from the camera.\r
                  Disabling camera visibility is the most optimized way to hide an object from the camera but still have it cast shadows, be visible in reflections, etc.\r
              """
    )
    uniform bool rpr:object:visibility:diffuse = 1 (
        displayGroup = "Visibility"
        displayName = "Visibility Diffuse"
        doc = "Diffuse visibility affects indirect diffuse rays and makes an object visible or invisible in reflections on diffuse surfaces."
    )
    uniform bool rpr:object:visibility:glossyReflection = 1 (
        displayGroup = "Visibility"
        displayName = "Visibility Glossy Reflection"
        doc = ""
    )
    uniform bool rpr:object:visibility:glossyRefraction = 1 (
        displayGroup = "Visibility"
        displayName = "Visibility Glossy Refraction"
        doc = ""
    )
    uniform bool rpr:object:visibility:reflection = 1 (
        displayGroup = "Visibility"
        displayName = "Visibility Reflection"
        doc = "Reflection visibility makes an object visible or invisible in reflections on specular surfaces. Note that hiding an object from specular reflections keeps its shadows (including reflected shadows) visible."
    )
    uniform bool rpr:object:visibility:refraction = 1 (
        displayGroup = "Visibility"
        displayName = "Visibility Refraction"
        doc = "Refraction visibility makes an object visible or invisible when seen through transparent objects. Note that hiding an object from refractive rays keeps its shadows (including refracted shadows) visible."
    )
    uniform bool rpr:object:visibility:shadow = 0 (
        displayGroup = "Visibility"
        displayName = "Visibility Shadow"
        doc = "Shadow visibility controls whether to show or to hide shadows cast by the object onto other surfaces (including reflected shadows and shadows seen through transparent objects). You might need this option to hide shadows that darken other objects in the scene or create unwanted effects."
    )
    uniform bool rpr:object:visibility:transparent = 1 (
        displayGroup = "Visibility"
        displayName = "Visibility Transparent"
        doc = ""
    )
}

class "RprDomeLightSettingsAPI"
{
    uniform color3f rpr:backgroundOverride:color = (1, 1, 1) (
        displayGroup = "RPR"
        displayName = "Background Override Color"
        doc = "Color that overrides background"
    )
    uniform bool rpr:backgroundOverride:enable = 0 (
        displayGroup = "RPR"
        displayName = "Background Override"
        doc = "Whether to override background."
    )
}

class "RprCameraSettingsAPI"
{
    uint rpr:camera:blades = 16 (
        displayGroup = "Aperture"
        displayName = "Aperture Blades"
        doc = ""
    )
}

